#version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - static_files:/home/app/staticfiles
      - ./config/settings.json:/config/settings.json
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
      - websocket

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/usr/src/app/
      - static_files:/usr/src/app/staticfiles
      - ./config/settings.json:/config/settings.json
    expose:
      - "8000"
    ports:
     - "8000:8000" #only if we want the port open to the browser otherwise expose
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./config/settings.json:/config/settings.json
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - websocket
    develop:
      watch:
        - path: src/
          target: /app/src/
          action: sync
        
  websocket:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    container_name: websocket
    init: true
    volumes:
      - ./config/settings.json:/config/settings.json
      - ./websocket:/app
    ports:
      - "8765:8765"
    depends_on:
      - backend
      - redis

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    env_file:
      - .env
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

volumes:
  static_files:
  redis-data:
